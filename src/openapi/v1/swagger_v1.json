{
  "openapi": "3.0.0",
  "info": {
    "title": "BilboMD Backend",
    "version": "1.0.1",
    "description": "API documentation for bilbomd-backend"
  },
  "servers": [
    {
      "url": "https://bl1231.als.lbl.gov/bilbomd-dev-backend/v1",
      "description": "production"
    },
    {
      "url": "http://localhost:3501/v1",
      "description": "development"
    }
  ],
  "paths": {
    "/af2pae": {
      "post": {
        "summary": "Create a new const file from PAE matrix.",
        "tags": [
          "Utilities"
        ],
        "description": "Endpoint for creating a new const file.",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "The email associated with the user."
                  },
                  "crd_file": {
                    "type": "string",
                    "format": "binary",
                    "description": "The CRD file to upload."
                  },
                  "pae_file": {
                    "type": "string",
                    "format": "binary",
                    "description": "The PAE file to upload."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Const file created successfully."
          },
          "400": {
            "description": "Invalid form data."
          }
        }
      },
      "get": {
        "summary": "Download Const File",
        "tags": [
          "Utilities"
        ],
        "description": "Download the const.inp file associated with a job by its UUID.",
        "parameters": [
          {
            "in": "query",
            "name": "uuid",
            "required": true,
            "description": "The UUID of the job for which to download the const.inp file.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Const file downloaded successfully.",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. The UUID parameter is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "The error message indicating the missing or invalid UUID."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error. Failed to download the const.inp file.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "The error message indicating the failure to download the file."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/otp": {
      "post": {
        "summary": "Authenticate user with OTP",
        "description": "Authenticate a user by providing a one-time password (OTP).",
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "otp": {
                    "type": "string",
                    "description": "The one-time password provided by the user.",
                    "example": 123456
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Authentication successful. Returns an access token.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "accessToken": {
                      "type": "string",
                      "description": "An access token for the authenticated user.",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Missing or invalid OTP.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Error message.",
                      "example": "OTP required."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Invalid OTP or OTP has expired.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message.",
                      "example": "OTP has expired."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error. An error occurred while processing the request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Error message.",
                      "example": "Internal server error."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/refresh": {
      "get": {
        "summary": "Refresh Access Token",
        "description": "Refreshes the access token using a valid refresh token.",
        "tags": [
          "Authentication"
        ],
        "parameters": [
          {
            "in": "cookie",
            "name": "jwt",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The refresh token received in a cookie."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful refresh.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "accessToken": {
                      "type": "string",
                      "description": "The new access token."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Invalid or missing refresh token.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Error message."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. Refresh token is invalid or expired.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Error message."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "summary": "Logout and Clear JWT Cookie",
        "description": "Logs out the user by clearing the JWT cookie.",
        "tags": [
          "Authentication"
        ],
        "responses": {
          "200": {
            "description": "JWT cookie cleared successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Success message."
                    }
                  }
                }
              }
            }
          },
          "204": {
            "description": "JWT cookie cleared successfully."
          }
        }
      }
    },
    "/jobs": {
      "get": {
        "summary": "Get All Jobs",
        "description": "Retrieve a list of all jobs.",
        "tags": [
          "Job Management"
        ],
        "responses": {
          "200": {
            "description": "List of jobs retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Job"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. No jobs found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Error message."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Error message."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new job",
        "description": "Create a new job submission.",
        "tags": [
          "Job Management"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "The email address of the user."
                  },
                  "files": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    },
                    "description": "Array of files to be uploaded."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New BilboMD Job successfully created.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "A success message."
                    },
                    "jobid": {
                      "type": "string",
                      "description": "The ID of the newly created job."
                    },
                    "uuid": {
                      "type": "string",
                      "description": "The UUID associated with the job."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "There was a problem parsing the uploaded files.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the request (Fail)."
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message."
                    },
                    "error": {
                      "type": "string",
                      "description": "Detailed error description."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "No user found with that email."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      },
      "patch": {
        "summary": "Update job status",
        "description": "Update the status of a job.",
        "tags": [
          "Job Management"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The ID of the job to update."
                  },
                  "email": {
                    "type": "string",
                    "description": "The email address associated with the job."
                  },
                  "status": {
                    "type": "string",
                    "description": "The new status for the job."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Job status updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "A success message indicating the job title that was updated."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "All fields are required, or job not found, or nothing to do.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Error message."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/jobs/{id}": {
      "delete": {
        "summary": "Delete a Job by ID",
        "description": "Delete a job by its unique identifier.",
        "tags": [
          "Job Management"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "The ID of the job to delete.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Job deleted successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reply": {
                      "type": "string",
                      "description": "A success message indicating the deleted job."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Invalid or missing job ID.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "An error message indicating the invalid or missing ID."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found. The job with the specified ID was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "An error message indicating the job was not found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error. Failed to delete the job.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "An error message indicating the failure to delete the job."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get a job by its ID.",
        "tags": [
          "Job Management"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of the job to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Job retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Job"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Job ID required."
          },
          "404": {
            "description": "No job matches the provided ID."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/jobs/{id}/download": {
      "get": {
        "summary": "Download job results by its ID.",
        "tags": [
          "Job Management"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of the job to download results from.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Job results downloaded successfully."
          },
          "204": {
            "description": "No job matches the provided ID."
          },
          "400": {
            "description": "Bad request. Job ID required."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/autorg": {
      "post": {
        "summary": "Calculate AutoRg for uploaded data.",
        "tags": [
          "Utilities"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "The email address of the user."
                  },
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "The data file to calculate AutoRg from."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "AutoRg calculation successful.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "A success message."
                    },
                    "uuid": {
                      "type": "string",
                      "description": "The UUID of the AutoRg calculation."
                    },
                    "rg": {
                      "type": "number",
                      "description": "The calculated Rg value."
                    },
                    "rg_min": {
                      "type": "number",
                      "description": "The minimum Rg value."
                    },
                    "rg_max": {
                      "type": "number",
                      "description": "The maximum Rg value."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Missing email or file."
          },
          "401": {
            "description": "Unauthorized. No user found with the provided email."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/magicklink": {
      "post": {
        "summary": "Generate a MagickLink for user authentication.",
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "The email address of the user."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "MagickLink and OTP created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "string",
                      "description": "A success message."
                    },
                    "otp": {
                      "type": "string",
                      "description": "The generated OTP (One-Time Password)."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Missing email."
          },
          "401": {
            "description": "Unauthorized. No account found with the provided email."
          },
          "403": {
            "description": "Forbidden. Account is pending or deactivated."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/register": {
      "post": {
        "summary": "Create a New User",
        "description": "Creates a new user with the provided username and email.",
        "tags": [
          "User Management"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user": {
                    "type": "string",
                    "description": "The username of the new user."
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "The email address of the new user."
                  }
                },
                "required": [
                  "user",
                  "email"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "string",
                      "description": "Success message."
                    },
                    "code": {
                      "type": "string",
                      "description": "Confirmation code for email verification."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid user data received.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Error message."
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict. Duplicate username or email found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Error message."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "Get all users",
        "description": "Retrieve a list of all users.",
        "tags": [
          "User Management"
        ],
        "responses": {
          "200": {
            "description": "Users retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "400": {
            "description": "No users found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/users/{id}": {
      "patch": {
        "summary": "Update User",
        "description": "Updates an existing user's information.",
        "tags": [
          "User Management"
        ],
        "requestBody": {
          "description": "User object to update.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "The ID of the user to update.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Success message."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Invalid input or missing fields.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Error message."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Error message."
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict. Duplicate username found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Error message."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete User",
        "description": "Deletes an existing user by their ID.",
        "tags": [
          "User Management"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The ID of the user to delete."
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Success message."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Invalid input or missing fields.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Error message."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Error message."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get User by ID",
        "description": "Retrieves user information by their ID.",
        "tags": [
          "User Management"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The ID of the user to retrieve."
          }
        ],
        "responses": {
          "200": {
            "description": "User retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Invalid input or missing fields.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Error message."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Error message."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/verify": {
      "post": {
        "summary": "Verify New User",
        "description": "Verify a new user's registration using a confirmation code.",
        "tags": [
          "User Management"
        ],
        "requestBody": {
          "description": "The confirmation code to verify the new user.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string",
                    "description": "The confirmation code to verify the new user."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User verified successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Success message."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Invalid input or missing fields.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Error message."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Error message."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/verify/resend": {
      "post": {
        "summary": "Resend Verification Code",
        "description": "Resend a verification code to a user's email for account confirmation.",
        "tags": [
          "User Management"
        ],
        "requestBody": {
          "description": "The user's email to resend the verification code.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "The user's email address for resending the verification code."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Verification code resent successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Success message."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Invalid input or missing fields.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Error message."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. No user with the provided email.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Error message."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Error message."
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "title": "User",
        "required": [
          "username",
          "email"
        ],
        "properties": {
          "username": {
            "type": "string"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "refreshToken": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "email": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "Pending",
              "Active"
            ]
          },
          "active": {
            "type": "boolean"
          },
          "confirmationCode": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string"
              },
              "expiresAt": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          "otp": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string"
              },
              "expiresAt": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          "UUID": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "last_access": {
            "type": "string",
            "format": "date-time"
          },
          "jobs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "_id": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "tags": [],
  "security": [
    {
      "bearerAuth": []
    }
  ]
}