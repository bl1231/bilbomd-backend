{
  "openapi": "3.1.0",
  "info": {
    "title": "BilboMD API Docs",
    "version": "1.21.1",
    "description": "API for external programmatic access to BilboMD job submission and results"
  },
  "servers": [
    {
      "url": "https://bilbomd.bl1231.als.lbl.gov/api/v1",
      "description": "Beamline 12.3.1"
    },
    {
      "url": "https://bilbomd-nersc.bl1231.als.lbl.gov/api/v1",
      "description": "NERSC"
    },
    {
      "url": "http://localhost:3501/api/v1",
      "description": "development"
    }
  ],
  "paths": {
    "/external/jobs": {
      "post": {
        "summary": "Submit a new job",
        "tags": [
          "Jobs"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "oneOf": [
                  {
                    "title": "PDB Job",
                    "required": [
                      "title",
                      "bilbomd_mode",
                      "pdb_file",
                      "crd_file",
                      "const_inp_file",
                      "dat_file"
                    ],
                    "properties": {
                      "bilbomd_mode": {
                        "type": "string",
                        "enum": [
                          "pdb"
                        ],
                        "description": "Must be set to \"pdb\" for this job type."
                      },
                      "title": {
                        "type": "string",
                        "description": "User-defined title for the job."
                      },
                      "pdb_file": {
                        "type": "string",
                        "format": "binary",
                        "description": "Upload the PDB file containing the atomic coordinates."
                      },
                      "crd_file": {
                        "type": "string",
                        "format": "binary",
                        "description": "Upload the CHARMM CRD file associated with the structure."
                      },
                      "const_inp_file": {
                        "type": "string",
                        "format": "binary",
                        "description": "Upload the const.inp configuration file used by BilboMD."
                      },
                      "dat_file": {
                        "type": "string",
                        "format": "binary",
                        "description": "Upload the experimental SAXS .dat file for fitting analysis."
                      }
                    }
                  },
                  {
                    "title": "CRD/PSF Job",
                    "required": [
                      "title",
                      "bilbomd_mode",
                      "crd_file",
                      "psf_file",
                      "const_inp_file",
                      "dat_file"
                    ],
                    "properties": {
                      "bilbomd_mode": {
                        "type": "string",
                        "enum": [
                          "crd_psf"
                        ],
                        "description": "Must be set to \"crd_psf\" for this job type."
                      },
                      "title": {
                        "type": "string",
                        "description": "User-defined title for the job."
                      },
                      "crd_file": {
                        "type": "string",
                        "format": "binary",
                        "description": "Upload the CHARMM CRD file containing structure coordinates."
                      },
                      "psf_file": {
                        "type": "string",
                        "format": "binary",
                        "description": "Upload the PSF file containing topology information."
                      },
                      "const_inp_file": {
                        "type": "string",
                        "format": "binary",
                        "description": "Upload the const.inp configuration file for BilboMD."
                      },
                      "dat_file": {
                        "type": "string",
                        "format": "binary",
                        "description": "Upload the experimental SAXS .dat file for fitting."
                      }
                    }
                  },
                  {
                    "title": "Auto Job",
                    "required": [
                      "title",
                      "bilbomd_mode",
                      "pdb_file",
                      "pae_file",
                      "dat_file"
                    ],
                    "properties": {
                      "bilbomd_mode": {
                        "type": "string",
                        "enum": [
                          "auto"
                        ],
                        "description": "Must be set to \"auto\" for this job type."
                      },
                      "title": {
                        "type": "string",
                        "description": "User-defined title for the job."
                      },
                      "pdb_file": {
                        "type": "string",
                        "format": "binary",
                        "description": "Upload the PDB file containing the full predicted structure."
                      },
                      "pae_file": {
                        "type": "string",
                        "format": "binary",
                        "description": "Upload the PAE (Predicted Aligned Error) matrix file from AlphaFold."
                      },
                      "dat_file": {
                        "type": "string",
                        "format": "binary",
                        "description": "Upload the experimental SAXS .dat file for fitting."
                      }
                    }
                  },
                  {
                    "title": "AlphaFold Job",
                    "required": [
                      "title",
                      "bilbomd_mode",
                      "dat_file",
                      "entities_json"
                    ],
                    "properties": {
                      "bilbomd_mode": {
                        "type": "string",
                        "enum": [
                          "alphafold"
                        ],
                        "description": "Must be set to \"alphafold\" for this job type."
                      },
                      "title": {
                        "type": "string",
                        "description": "User-defined title for the job."
                      },
                      "dat_file": {
                        "type": "string",
                        "format": "binary",
                        "description": "Upload the experimental SAXS .dat file for fitting."
                      },
                      "entities_json": {
                        "$ref": "#/components/schemas/EntitiesJson",
                        "description": "JSON file containing entity information for the job."
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Job submitted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "New auto job successfully created"
                    },
                    "jobid": {
                      "type": "string",
                      "example": "680aa4ffce4a325a086cbced"
                    },
                    "uuid": {
                      "type": "string",
                      "example": "f4ba7568-369a-465a-b0d1-a78969bb816b"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/ForbiddenAlphaFold"
          }
        }
      }
    },
    "/external/jobs/{id}/status": {
      "get": {
        "summary": "Get job status",
        "tags": [
          "Jobs"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The MongoDB job ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Job status returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobStatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid job ID",
            "content": {
              "application/json": {
                "example": {
                  "message": "Invalid job ID format"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Job not found",
            "content": {
              "application/json": {
                "example": {
                  "message": "No job found with ID: 680aa4ffce4a325a086cbced"
                }
              }
            }
          },
          "500": {
            "description": "Server error retrieving job status",
            "content": {
              "application/json": {
                "example": {
                  "message": "Failed to retrieve job status"
                }
              }
            }
          }
        }
      }
    },
    "/external/jobs/{id}/results": {
      "get": {
        "summary": "Download job results as a tarball archive",
        "tags": [
          "Jobs"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "MongoDB ID of the job (either Job or MultiJob)"
          }
        ],
        "responses": {
          "200": {
            "description": "A tarball archive containing the job results",
            "content": {
              "application/gzip": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "examples": {
                  "MissingID": {
                    "summary": "Missing job ID",
                    "value": {
                      "message": "Job ID required."
                    }
                  },
                  "NotCompleted": {
                    "summary": "Job not yet completed",
                    "value": {
                      "message": "Job is not complete (status: Running). You may only download results for a job that has completed successfully."
                    }
                  },
                  "NullDoc": {
                    "summary": "Job document is null or undefined",
                    "value": {
                      "message": "Job document is null or undefined."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Job or result file not found",
            "content": {
              "application/json": {
                "examples": {
                  "NoJob": {
                    "summary": "Job not found",
                    "value": {
                      "message": "No job matches ID 680aa4ffce4a325a086cbced."
                    }
                  },
                  "NoResultsFile": {
                    "summary": "Results file missing",
                    "value": {
                      "message": "Results file not found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "examples": {
                  "DownloadError": {
                    "summary": "Error during file download",
                    "value": {
                      "message": "Could not download the file: ENOENT: no such file or directory"
                    }
                  },
                  "Unexpected": {
                    "summary": "Unexpected server error",
                    "value": {
                      "message": "An error occurred while processing your request."
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "title": "User",
        "required": [
          "username",
          "roles",
          "refreshToken",
          "email"
        ],
        "properties": {
          "username": {
            "type": "string"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "oauth": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "provider": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "accessToken": {
                  "type": "string"
                },
                "refreshToken": {
                  "type": "string"
                },
                "tokenType": {
                  "type": "string"
                },
                "scope": {
                  "type": "string"
                },
                "expiresIn": {
                  "type": "number"
                },
                "tokenIssuedAt": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "required": [
                "provider",
                "name"
              ]
            }
          },
          "refreshToken": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "apiTokens": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "tokenHash": {
                  "type": "string"
                },
                "label": {
                  "type": "string"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "expiresAt": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "required": [
                "tokenHash"
              ]
            }
          },
          "email": {
            "type": "string"
          },
          "firstName": {
            "type": "string",
            "required": false
          },
          "lastName": {
            "type": "string",
            "required": false
          },
          "newEmail": {
            "type": "string",
            "required": false
          },
          "previousEmails": {
            "type": "array",
            "required": false,
            "items": {
              "type": "string"
            }
          },
          "status": {
            "type": "string",
            "enum": [
              "Pending",
              "Active"
            ]
          },
          "active": {
            "type": "boolean"
          },
          "confirmationCode": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string"
              },
              "expiresAt": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          "otp": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string"
              },
              "expiresAt": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          "UUID": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "last_access": {
            "type": "string",
            "format": "date-time"
          },
          "jobs": {
            "type": "array",
            "items": {
              "type": "schemaobjectid"
            }
          },
          "jobCount": {
            "type": "number"
          },
          "jobTypes": {
            "type": "object",
            "additionalProperties": {
              "type": "number"
            }
          },
          "_id": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Jobs": {
        "title": "BilboMd",
        "required": [
          "title",
          "uuid",
          "data_file",
          "user",
          "psf_file",
          "crd_file",
          "const_inp_file",
          "rg",
          "rg_min",
          "rg_max"
        ],
        "properties": {
          "title": {
            "type": "string"
          },
          "uuid": {
            "type": "string"
          },
          "data_file": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "Submitted",
              "Pending",
              "Running",
              "Completed",
              "Error",
              "Failed",
              "Cancelled"
            ]
          },
          "time_submitted": {
            "type": "string",
            "format": "date-time"
          },
          "time_started": {
            "type": "string",
            "format": "date-time"
          },
          "time_completed": {
            "type": "string",
            "format": "date-time"
          },
          "user": {
            "type": "schemaobjectid"
          },
          "resubmitted_from": {
            "type": "schemaobjectid",
            "required": false
          },
          "steps": {
            "type": "object",
            "required": false,
            "properties": {
              "alphafold": {
                "type": "object",
                "required": false,
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": [
                      "Waiting",
                      "Running",
                      "Success",
                      "Error"
                    ]
                  },
                  "message": {
                    "type": "string",
                    "required": false
                  },
                  "_id": {
                    "type": "string"
                  }
                }
              },
              "pdb2crd": {
                "type": "object",
                "required": false,
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": [
                      "Waiting",
                      "Running",
                      "Success",
                      "Error"
                    ]
                  },
                  "message": {
                    "type": "string",
                    "required": false
                  },
                  "_id": {
                    "type": "string"
                  }
                }
              },
              "pae": {
                "type": "object",
                "required": false,
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": [
                      "Waiting",
                      "Running",
                      "Success",
                      "Error"
                    ]
                  },
                  "message": {
                    "type": "string",
                    "required": false
                  },
                  "_id": {
                    "type": "string"
                  }
                }
              },
              "autorg": {
                "type": "object",
                "required": false,
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": [
                      "Waiting",
                      "Running",
                      "Success",
                      "Error"
                    ]
                  },
                  "message": {
                    "type": "string",
                    "required": false
                  },
                  "_id": {
                    "type": "string"
                  }
                }
              },
              "minimize": {
                "type": "object",
                "required": false,
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": [
                      "Waiting",
                      "Running",
                      "Success",
                      "Error"
                    ]
                  },
                  "message": {
                    "type": "string",
                    "required": false
                  },
                  "_id": {
                    "type": "string"
                  }
                }
              },
              "initfoxs": {
                "type": "object",
                "required": false,
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": [
                      "Waiting",
                      "Running",
                      "Success",
                      "Error"
                    ]
                  },
                  "message": {
                    "type": "string",
                    "required": false
                  },
                  "_id": {
                    "type": "string"
                  }
                }
              },
              "heat": {
                "type": "object",
                "required": false,
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": [
                      "Waiting",
                      "Running",
                      "Success",
                      "Error"
                    ]
                  },
                  "message": {
                    "type": "string",
                    "required": false
                  },
                  "_id": {
                    "type": "string"
                  }
                }
              },
              "md": {
                "type": "object",
                "required": false,
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": [
                      "Waiting",
                      "Running",
                      "Success",
                      "Error"
                    ]
                  },
                  "message": {
                    "type": "string",
                    "required": false
                  },
                  "_id": {
                    "type": "string"
                  }
                }
              },
              "dcd2pdb": {
                "type": "object",
                "required": false,
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": [
                      "Waiting",
                      "Running",
                      "Success",
                      "Error"
                    ]
                  },
                  "message": {
                    "type": "string",
                    "required": false
                  },
                  "_id": {
                    "type": "string"
                  }
                }
              },
              "pdb_remediate": {
                "type": "object",
                "required": false,
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": [
                      "Waiting",
                      "Running",
                      "Success",
                      "Error"
                    ]
                  },
                  "message": {
                    "type": "string",
                    "required": false
                  },
                  "_id": {
                    "type": "string"
                  }
                }
              },
              "foxs": {
                "type": "object",
                "required": false,
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": [
                      "Waiting",
                      "Running",
                      "Success",
                      "Error"
                    ]
                  },
                  "message": {
                    "type": "string",
                    "required": false
                  },
                  "_id": {
                    "type": "string"
                  }
                }
              },
              "pepsisans": {
                "type": "object",
                "required": false,
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": [
                      "Waiting",
                      "Running",
                      "Success",
                      "Error"
                    ]
                  },
                  "message": {
                    "type": "string",
                    "required": false
                  },
                  "_id": {
                    "type": "string"
                  }
                }
              },
              "multifoxs": {
                "type": "object",
                "required": false,
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": [
                      "Waiting",
                      "Running",
                      "Success",
                      "Error"
                    ]
                  },
                  "message": {
                    "type": "string",
                    "required": false
                  },
                  "_id": {
                    "type": "string"
                  }
                }
              },
              "gasans": {
                "type": "object",
                "required": false,
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": [
                      "Waiting",
                      "Running",
                      "Success",
                      "Error"
                    ]
                  },
                  "message": {
                    "type": "string",
                    "required": false
                  },
                  "_id": {
                    "type": "string"
                  }
                }
              },
              "copy_results_to_cfs": {
                "type": "object",
                "required": false,
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": [
                      "Waiting",
                      "Running",
                      "Success",
                      "Error"
                    ]
                  },
                  "message": {
                    "type": "string",
                    "required": false
                  },
                  "_id": {
                    "type": "string"
                  }
                }
              },
              "results": {
                "type": "object",
                "required": false,
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": [
                      "Waiting",
                      "Running",
                      "Success",
                      "Error"
                    ]
                  },
                  "message": {
                    "type": "string",
                    "required": false
                  },
                  "_id": {
                    "type": "string"
                  }
                }
              },
              "email": {
                "type": "object",
                "required": false,
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": [
                      "Waiting",
                      "Running",
                      "Success",
                      "Error"
                    ]
                  },
                  "message": {
                    "type": "string",
                    "required": false
                  },
                  "_id": {
                    "type": "string"
                  }
                }
              },
              "nersc_prepare_slurm_batch": {
                "type": "object",
                "required": false,
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": [
                      "Waiting",
                      "Running",
                      "Success",
                      "Error"
                    ]
                  },
                  "message": {
                    "type": "string",
                    "required": false
                  },
                  "_id": {
                    "type": "string"
                  }
                }
              },
              "nersc_submit_slurm_batch": {
                "type": "object",
                "required": false,
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": [
                      "Waiting",
                      "Running",
                      "Success",
                      "Error"
                    ]
                  },
                  "message": {
                    "type": "string",
                    "required": false
                  },
                  "_id": {
                    "type": "string"
                  }
                }
              },
              "nersc_job_status": {
                "type": "object",
                "required": false,
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": [
                      "Waiting",
                      "Running",
                      "Success",
                      "Error"
                    ]
                  },
                  "message": {
                    "type": "string",
                    "required": false
                  },
                  "_id": {
                    "type": "string"
                  }
                }
              },
              "nersc_copy_results_to_cfs": {
                "type": "object",
                "required": false,
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": [
                      "Waiting",
                      "Running",
                      "Success",
                      "Error"
                    ]
                  },
                  "message": {
                    "type": "string",
                    "required": false
                  },
                  "_id": {
                    "type": "string"
                  }
                }
              },
              "_id": {
                "type": "string"
              }
            }
          },
          "progress": {
            "type": "number"
          },
          "feedback": {
            "type": "object",
            "required": false,
            "properties": {
              "mw_saxs": {
                "type": "number"
              },
              "mw_model": {
                "type": "number"
              },
              "mw_err": {
                "type": "number"
              },
              "best_model_dat_file": {
                "type": "string"
              },
              "best_ensemble_pdb_file": {
                "type": "string"
              },
              "overall_chi_square": {
                "type": "number"
              },
              "q_ranges": {
                "type": "array",
                "items": {
                  "type": "number",
                  "required": true
                }
              },
              "chi_squares_of_regions": {
                "type": "array",
                "items": {
                  "type": "number",
                  "required": true
                }
              },
              "residuals_of_regions": {
                "type": "array",
                "items": {
                  "type": "number",
                  "required": true
                }
              },
              "mw_feedback": {
                "type": "string"
              },
              "overall_chi_square_feedback": {
                "type": "string"
              },
              "highest_chi_square_feedback": {
                "type": "string"
              },
              "second_highest_chi_square_feedback": {
                "type": "string"
              },
              "regional_chi_square_feedback": {
                "type": "string"
              },
              "timestamp": {
                "type": "string",
                "format": "date-time"
              },
              "_id": {
                "type": "string"
              }
            }
          },
          "nersc": {
            "type": "object",
            "required": false,
            "properties": {
              "jobid": {
                "type": "string",
                "required": false
              },
              "state": {
                "type": "string",
                "required": false
              },
              "qos": {
                "type": "string",
                "required": false
              },
              "time_submitted": {
                "type": "string",
                "format": "date-time"
              },
              "time_started": {
                "type": "string",
                "required": false,
                "format": "date-time"
              },
              "time_completed": {
                "type": "string",
                "required": false,
                "format": "date-time"
              },
              "_id": {
                "type": "string"
              }
            }
          },
          "cleanup_in_progress": {
            "type": "boolean"
          },
          "_id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "__t": {
            "type": "string"
          },
          "pdb_file": {
            "type": "string",
            "required": false
          },
          "psf_file": {
            "type": "string"
          },
          "crd_file": {
            "type": "string"
          },
          "const_inp_file": {
            "type": "string"
          },
          "md_engine": {
            "type": "string",
            "enum": [
              "CHARMM",
              "OpenMM"
            ],
            "required": false
          },
          "conformational_sampling": {
            "type": "number",
            "enum": [
              1,
              2,
              3,
              4
            ]
          },
          "rg": {
            "type": "number"
          },
          "rg_min": {
            "type": "number"
          },
          "rg_max": {
            "type": "number"
          }
        }
      },
      "JobStatusResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "Completed"
          },
          "progress": {
            "type": "integer",
            "example": 100
          },
          "title": {
            "type": "string",
            "example": "API Test Job PDB"
          },
          "mode": {
            "type": "string",
            "example": "BilboMdPDB"
          },
          "uuid": {
            "type": "string",
            "example": "6a8d578c-99df-4845-8cbc-f362e9860eeb"
          },
          "submittedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-04-24T21:00:37.583Z"
          },
          "completedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-04-24T21:14:45.789Z"
          }
        }
      },
      "EntitiesJson": {
        "type": "object",
        "required": [
          "entities"
        ],
        "properties": {
          "entities": {
            "type": "array",
            "description": "List of entities to model, each with type, sequence, and number of copies.",
            "items": {
              "type": "object",
              "required": [
                "id",
                "type",
                "sequence",
                "copies"
              ],
              "properties": {
                "id": {
                  "type": "integer",
                  "example": 1
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "Protein",
                    "DNA",
                    "RNA"
                  ],
                  "example": "Protein"
                },
                "sequence": {
                  "type": "string",
                  "example": "MSEQNNTEMTFQIQRIYTKDISFEAPNAPHVFQKDWLD..."
                },
                "copies": {
                  "type": "integer",
                  "example": 2
                }
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "cookieAuth": {
        "type": "apiKey",
        "in": "cookie",
        "name": "jwt"
      }
    },
    "responses": {
      "UnauthorizedError": {
        "description": "BilboMD API Token is missing or invalid",
        "content": {
          "application/json": {
            "examples": {
              "InvalidToken": {
                "summary": "Invalid API token",
                "value": {
                  "message": "Invalid API token"
                }
              },
              "MissingHeader": {
                "summary": "Missing or invalid Authorization header",
                "value": {
                  "message": "Missing or invalid Authorization header"
                }
              }
            }
          }
        }
      },
      "ValidationError": {
        "description": "Request failed validation",
        "content": {
          "application/json": {
            "example": {
              "message": "Validation failed",
              "errors": [
                {
                  "path": "dat_file",
                  "message": "No valid SAXS data found"
                },
                {
                  "path": "pae_file",
                  "message": "A PAE *.json file is required"
                },
                {
                  "path": "pae_file",
                  "message": "Only accepts a *.json file."
                },
                {
                  "path": "pae_file",
                  "message": "Max file size is 120MB"
                },
                {
                  "path": "pae_file",
                  "message": "Filename must be no longer than 30 characters."
                }
              ]
            }
          }
        }
      },
      "ForbiddenAlphaFold": {
        "description": "AlphaFold jobs are disabled due to configuration",
        "content": {
          "application/json": {
            "example": {
              "message": "AlphaFold jobs unavailable on this deployment."
            }
          }
        }
      }
    }
  },
  "tags": [],
  "security": [
    {
      "bearerAuth": []
    }
  ]
}