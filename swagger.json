{
  "openapi": "3.0.0",
  "info": {
    "title": "BilboMD Backend",
    "version": "0.0.14",
    "description": "API documentation for bilbomd-backend"
  },
  "paths": {
    "/auth/otp": {
      "post": {
        "summary": "Authenticate user with OTP",
        "description": "Authenticate a user by providing a one-time password (OTP).",
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "otp": {
                    "type": "string",
                    "description": "The one-time password provided by the user.",
                    "example": 123456
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Authentication successful. Returns an access token.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "accessToken": {
                      "type": "string",
                      "description": "An access token for the authenticated user.",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Missing or invalid OTP.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Error message.",
                      "example": "OTP required."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Invalid OTP or OTP has expired.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message.",
                      "example": "OTP has expired."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error. An error occurred while processing the request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Error message.",
                      "example": "Internal server error."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/refresh": {
      "get": {
        "summary": "Refresh Access Token",
        "description": "Refreshes the access token using a valid refresh token.",
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "refreshToken": {
                    "type": "string",
                    "description": "The refresh token."
                  }
                },
                "required": [
                  "refreshToken"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New access token generated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "accessToken": {
                      "type": "string",
                      "description": "The new access token."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. The provided refresh token is invalid or expired.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Error message."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. The provided refresh token is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Error message."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "summary": "Logout and Clear JWT Cookie",
        "description": "Logs out the user by clearing the JWT cookie.",
        "tags": [
          "Authentication"
        ],
        "responses": {
          "200": {
            "description": "JWT cookie cleared successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Success message."
                    }
                  }
                }
              }
            }
          },
          "204": {
            "description": "JWT cookie cleared successfully."
          }
        }
      }
    },
    "/register/new-user": {
      "post": {
        "summary": "Create a New User",
        "description": "Creates a new user with the provided username and email.",
        "tags": [
          "User Management"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user": {
                    "type": "string",
                    "description": "The username of the new user."
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "The email address of the new user."
                  }
                },
                "required": [
                  "user",
                  "email"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "string",
                      "description": "Success message."
                    },
                    "code": {
                      "type": "string",
                      "description": "Confirmation code for email verification."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid user data received.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Error message."
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict. Duplicate username or email found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Error message."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "Get All Users",
        "description": "Retrieves a list of all users.",
        "tags": [
          "User Management"
        ],
        "responses": {
          "200": {
            "description": "List of users retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "username": {
                        "type": "string",
                        "description": "The username of the user."
                      },
                      "email": {
                        "type": "string",
                        "description": "The email address of the user."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "No users found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Error message."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "patch": {
        "summary": "Update User",
        "description": "Updates an existing user's information.",
        "tags": [
          "User Management"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The ID of the user to update."
          },
          {
            "in": "body",
            "name": "user",
            "required": true,
            "description": "The user object to update.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The ID of the user."
                },
                "username": {
                  "type": "string",
                  "description": "The updated username."
                },
                "roles": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The updated roles of the user."
                },
                "active": {
                  "type": "boolean",
                  "description": "The updated active status of the user."
                },
                "email": {
                  "type": "string",
                  "description": "The updated email address of the user."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Success message."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Invalid input or missing fields.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Error message."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Error message."
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict. Duplicate username found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Error message."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete User",
        "description": "Deletes an existing user by their ID.",
        "tags": [
          "User Management"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The ID of the user to delete."
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Success message."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Invalid input or missing fields.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Error message."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Error message."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get User by ID",
        "description": "Retrieves user information by their ID.",
        "tags": [
          "User Management"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The ID of the user to retrieve."
          }
        ],
        "responses": {
          "200": {
            "description": "User retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "username": {
                      "type": "string",
                      "description": "The username of the user."
                    },
                    "email": {
                      "type": "string",
                      "description": "The email address of the user."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Invalid input or missing fields.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Error message."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Error message."
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {},
  "tags": []
}